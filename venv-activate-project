#!/bin/bash

# This script is useful for developers who use virtual environments
# and need to quickly activate the virtual environment,
# upgrade pip, and set the PYTHONPATH to include the src and tests directories.
# It also removes duplicates from the PYTHONPATH.
# It is intended to be used as a command line tool.
# It is not intended to be used as a script in a project.
# It is intended to be used as a command line tool that is
# sourced in the shell.

# this script is sourced by the alias venv-activate
# it is not intended to be run as a standalone script
# it is intended to be sourced in the shell or in 
# a script that is run in the shell.

prompt() {
    echo -n "$1 "
    read -n 1
    echo
}

# Function to handle errors
handle_error() {
    echo -n "$1 "
    read -n 1 
    echo
    return 1
}

# Determine the root directory of the project
ROOT_DIR=$(git rev-parse --show-toplevel)

# Check if the root directory is not empty
if [ -z "$ROOT_DIR" ]; then
    handle_error "This script should be sourced from a venv-enhanced project. (hit a key)"
fi

# Check the virtual environment
if [ ! -f "$ROOT_DIR/venv/bin/activate" ]; then
    handle_error "Virtual environment not found. Create a virtual environment first. (hit a key)"
fi

prompt "activating the virtual environment (hit a key)"
source "$ROOT_DIR/venv/bin/activate"

prompt "upgrading pip (hit a key)"
python -m pip install --upgrade pip || handle_error "Failed to upgrade pip"

# If the project has a src directory and if not 
# already in the PYTHONPATH, then add it.
if [ -f "$ROOT_DIR/src/__init__.py" ]; then
    SRC_PATH="$ROOT_DIR/src"
    if [[ ":$PYTHONPATH:" != *":$SRC_PATH:"* ]]; then
        prompt "adding $SRC_PATH to PYTHONPATH (hit a key)"
        export PYTHONPATH="$SRC_PATH:$PYTHONPATH"
    fi
fi

# Likewise, if the project has a tests directory and if not 
# already in the PYTHONPATH then add it.
if [[ -d "$ROOT_DIR/tests" ]]; then
    TESTS_PATH="$ROOT_DIR/tests"
    if [[ ":$PYTHONPATH:" != *":$TESTS_PATH:"* ]]; then
        prompt "adding $TESTS_PATH to PYTHONPATH (hit a key)"
        export PYTHONPATH="$TESTS_PATH:$PYTHONPATH"
    fi
fi

prompt "Removing duplicates from PYTHONPATH (hit a key)"
export PYTHONPATH=$(echo "$PYTHONPATH" | awk -v RS=: -v ORS=: '!a[$1]++' | sed 's/:$//')

prompt "bye now (hit a key)"

echo "PYTHONPATH: $PYTHONPATH"